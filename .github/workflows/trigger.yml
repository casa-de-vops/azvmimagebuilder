name: create_custom_vm_image
on: [workflow_dispatch]

permissions:
  contents: read
  id-token: write
  actions: read
  # Write access for security-events is only required for customers looking for MSDO results to appear in the codeQL security alerts tab on GitHub (Requires GHAS)
  security-events: write

jobs:
  BUILD-CUSTOM-IMAGE:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login via Az module
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'  # Specify the Python version you need
  
      - name: Install Semverbot
        run: |
          export SEMVERBOT_VERSION=1.0.0
          mkdir bin
          echo "$(pwd)/bin" >> $GITHUB_PATH
          curl -o bin/sbot -L https://github.com/restechnica/semverbot/releases/download/v$SEMVERBOT_VERSION/sbot-linux-amd64
          chmod +x bin/sbot

      - name: Set up Git
        run: |
          git config --global user.name 'semverbot'
          git config --global user.email 'semverbot@github.com'
  
      - name: Update Version Information
        run: |
          sbot update version
          current_version="$(sbot get version)"
          release_version="$(sbot predict version)"
          
          echo "CURRENT_VERSION=${current_version}" >> $GITHUB_ENV
          echo "RELEASE_VERSION=${release_version}" >> $GITHUB_ENV
          
          echo "current version: ${current_version}"
          echo "next version: ${release_version}"


      - name: Build and Distribute Custom VM Image
        uses: azure/build-vm-image@v0
        with:
          location: "westus2"
          resource-group-name: "rg-connectivity-prod-westus2-example-001"
          managed-identity: "rai-identity" # Managed identity as mentioned in pre-requisites.
          source-os-type: "linux"
          source-image-type: "PlatformImage"
          source-image: Canonical:UbuntuServer:18.04-LTS:latest
          # customizer-source: ${{ GITHUB.WORKSPACE }}/workflow-artifacts
          # customizer-script: |
          #   sudo mkdir /buildArtifacts
          #   sudo cp -r /tmp/ /buildArtifacts/
          #   sh /buildArtifacts/workflow-artifacts/install-world.sh
          dist-type: 'SharedImageGallery'
          dist-resource-id: '/subscriptions/49be4b4d-9619-4d67-afbe-a4244b530748/resourceGroups/rg-connectivity-prod-westus2-example-001/providers/Microsoft.Compute/galleries/appImageGallery/images/GoldenImage/versions/${{ env.CURRENT_VERSION }}' #Replace with the resource id of your shared image  gallery's image definition
          dist-location: 'westus2'

    # - name: CREATE APP BAKED VM IMAGE
    #   id: imageBuilder
    #   uses: azure/build-vm-image@v0
    #   with:
    #     location: 'westus2'
    #     resource-group-name: 'rg-connectivity-prod-westus2-example-001'
    #     managed-identity: 'rai-identity' # Managed identity as mentioned in pre-requisites.

    #     source-os-type: 'windows'
    #     source-image-type: 'platformImage'
    #     source-image: MicrosoftWindowsServer:WindowsServer:2019-Datacenter:latest #unique  identitifier of source image

    #     customizer-source: '${{ GITHUB.WORKSPACE }}\webApp'  # This folder gets copied tothe   image at location C:\
    #     customizer-script: |
    #       & 'c:\webApp\webconfig.ps1'

    #     dist-type: 'SharedImageGallery'
    #     dist-resource-id: '/subscriptions/${{ secrets.SUBSCRIPTION_ID }}resourceGroups/rg-connectivity-prod-westus2-example-001/providers/Microsoft.Compute/galleries/appImageGallery/images/AppBakedVMs/versions/0.1.${{ GITHUB.RUN_ID }}' #Replace with the resource id of your shared image  gallery's image definition
    #     dist-location: 'westus2'

    # - name: CREATE VM
    #   uses: azure/CLI@v1
    #   with:
    #     azcliversion: 2.0.72
    #     inlineScript: |
    #       az vm create --resource-group raivmdemo-rg  --name "app-vm-${{ GITHUB.RUN_NUMBER }}"  --admin-username myusername --admin-password "${{ secrets.VM_PWD }}" --location  eastus \
    #       --image "${{ steps.imageBuilder.outputs.custom-image-uri }}"
