# .github/workflows/template.yaml
name: "[TEMPLATE] AIB – Build & Publish VM Image"

on:
  workflow_call:
    inputs:
      templateFolder:      { type: string, required: true }
      templateName:        { type: string, required: true }
      sigResourceGroup:    { type: string, required: true }
      imageDefName:        { type: string, required: true }
      sigName:             { type: string, required: true }
      uaiIdentityName:     { type: string, required: true }
      location:            { type: string, required: true }
      additionalregion:    { type: string, required: false, default: "" }
      runOutputName:       { type: string, required: true }
      templateType:        { type: string, required: true, description: "armTemplate | imageTemplate" }
    secrets:
      AZURE_CLIENT_ID:       { required: true }
      AZURE_TENANT_ID:       { required: true }
      AZURE_SUBSCRIPTION_ID: { required: true }

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

permissions:
  contents: write
  id-token: write

defaults:
  run:
    shell: bash

env:
  SUB_ID:          ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  SIG_RG:          ${{ inputs.sigResourceGroup }}
  TEMPLATE_FILE:   ${{ inputs.templateName }}
  TEMPLATE_DIR:    templates/${{ inputs.templateFolder }}
  TEMPLATE_TYPE:   ${{ inputs.templateType }}
  IMAGE_DEF:       ${{ inputs.imageDefName }}
  SIG_NAME:        ${{ inputs.sigName }}
  PRIMARY_REGION:  ${{ inputs.location }}
  ADDL_REGION:     ${{ inputs.additionalregion }}
  RUN_OUTPUT:      ${{ inputs.runOutputName }}
  IMG_BUILDER_ID:  "/subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/${{ inputs.sigResourceGroup }}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/${{ inputs.uaiIdentityName }}"

#################################################################
# Jobs
#################################################################
jobs:
  #################################################################
  # Validation – runs on every push
  #################################################################
  validate:
    name: Template validation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0, fetch-tags: true }

      - uses: azure/login@v2
        with:
          client-id:       ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id:       ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: false

      - name: Compute version
        id: version
        run: echo "release=${{ github.run_number }}-$(git rev-parse --short ${{ github.sha }})" >> "$GITHUB_OUTPUT"

      - name: Token replace
        run: |
          cp "$TEMPLATE_DIR/$TEMPLATE_FILE" "$TEMPLATE_FILE"
          sed -i -e "s|<subscriptionID>|$SUB_ID|g" \
                 -e "s|<rgName>|$SIG_RG|g" \
                 -e "s|<imageDefName>|$IMAGE_DEF|g" \
                 -e "s|<sharedImageGalName>|$SIG_NAME|g" \
                 -e "s|<region1>|$PRIMARY_REGION|g" \
                 -e "s|<region2>|$ADDL_REGION|g" \
                 -e "s|<runOutputName>|$RUN_OUTPUT|g" \
                 -e "s%<imgBuilderId>%$IMG_BUILDER_ID%g" "$TEMPLATE_FILE"

      - name: Validate ARM template
        if: env.TEMPLATE_TYPE == 'armTemplate'
        run: |
          az deployment group validate \
            --resource-group $SIG_RG \
            --template-file "$TEMPLATE_FILE" \
            --mode Incremental

      - name: Validate image template
        if: env.TEMPLATE_TYPE == 'imageTemplate'
        run: |
          # Validate the JSON template with Azure Image Builder
          az deployment sub validate \
            --location $PRIMARY_REGION \
            --template-file "$TEMPLATE_FILE" \
            --name "validation-$TEMPLATE_FILE" \
            --parameters resourceType=Microsoft.VirtualMachineImages/imageTemplates

      - name: Upload resolved template
        uses: actions/upload-artifact@v4
        with: 
          name: resolved-template
          path: ${{ env.TEMPLATE_FILE }}

  #################################################################
  # Dev build (feature/* or develop/*)
  #################################################################
  build-dev:
    name: Dev image build
    needs: validate
    if: |
      (startsWith(github.ref, 'refs/heads/feature/') || startsWith(github.ref, 'refs/heads/develop/'))
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0, fetch-tags: true }

      - uses: azure/login@v2
        with:
          client-id:       ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id:       ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Token replace (dev identifiers)
        run: |
          cp "$TEMPLATE_DIR/$TEMPLATE_FILE" "$TEMPLATE_FILE"
          sed -i -e "s|<subscriptionID>|$SUB_ID|g" \
                 -e "s|<rgName>|$SIG_RG|g" \
                 -e "s|<imageDefName>|${IMAGE_DEF}-dev|g" \
                 -e "s|<sharedImageGalName>|${SIG_NAME}-dev|g" \
                 -e "s|<region1>|$PRIMARY_REGION|g" \
                 -e "s|<region2>|$ADDL_REGION|g" \
                 -e "s|<runOutputName>|${RUN_OUTPUT}-dev|g" \
                 -e "s%<imgBuilderId>%$IMG_BUILDER_ID%g" "$TEMPLATE_FILE"

      - name: Deploy ARM template (dev)
        if: env.TEMPLATE_TYPE == 'armTemplate'
        run: |
          VER="dev-${{ github.run_number }}-$(git rev-parse --short ${{ github.sha }})"
          az deployment group create \
            --resource-group $SIG_RG \
            --template-file "$TEMPLATE_FILE" \
            --name "aib-dev-deploy-$VER" \
            --mode Incremental

      - name: Build image (imageTemplate)
        if: env.TEMPLATE_TYPE == 'imageTemplate'
        run: |
          VER="dev-${{ github.run_number }}-$(git rev-parse --short ${{ github.sha }})"
          IT_NAME="${RUN_OUTPUT}-dev-${VER}"
          az resource create --resource-group $SIG_RG \
            --resource-type Microsoft.VirtualMachineImages/imageTemplates \
            --name "$IT_NAME" \
            --properties @"$TEMPLATE_FILE" \
            --is-full-object
          az resource invoke-action --resource-group $SIG_RG \
            --resource-type Microsoft.VirtualMachineImages/imageTemplates \
            --name "$IT_NAME" --action Run

  #################################################################
  # Release build – main branch
  #################################################################
  release:
    name: Release build & publish
    needs: validate
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0, fetch-tags: true }

      - uses: azure/login@v2
        with:
          client-id:       ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id:       ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true

      - name: Token replace
        run: |
          cp "$TEMPLATE_DIR/$TEMPLATE_FILE" "$TEMPLATE_FILE"
          sed -i -e "s|<subscriptionID>|$SUB_ID|g" \
                 -e "s|<rgName>|$SIG_RG|g" \
                 -e "s|<imageDefName>|$IMAGE_DEF|g" \
                 -e "s|<sharedImageGalName>|$SIG_NAME|g" \
                 -e "s|<region1>|$PRIMARY_REGION|g" \
                 -e "s|<region2>|$ADDL_REGION|g" \
                 -e "s|<runOutputName>|$RUN_OUTPUT|g" \
                 -e "s%<imgBuilderId>%$IMG_BUILDER_ID%g" "$TEMPLATE_FILE"

      - name: Deploy ARM template
        if: env.TEMPLATE_TYPE == 'armTemplate'
        run: |
          VER="${{ github.run_number }}-$(git rev-parse --short ${{ github.sha }})"
          az deployment group create \
            --resource-group $SIG_RG \
            --template-file "$TEMPLATE_FILE" \
            --name "aib-production-deploy-$VER" \
            --mode Incremental

      - name: Build & distribute (imageTemplate)
        if: env.TEMPLATE_TYPE == 'imageTemplate'
        run: |
          VER="${{ github.run_number }}-$(git rev-parse --short ${{ github.sha }})"
          IT_NAME="${RUN_OUTPUT}-${VER}"
          az resource create --resource-group $SIG_RG \
            --resource-type Microsoft.VirtualMachineImages/imageTemplates \
            --name "$IT_NAME" \
            --properties @"$TEMPLATE_FILE" \
            --is-full-object
          az resource invoke-action --resource-group $SIG_RG \
            --resource-type Microsoft.VirtualMachineImages/imageTemplates \
            --name "$IT_NAME" --action Run
