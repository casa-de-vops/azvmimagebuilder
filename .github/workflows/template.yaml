name: "[Template] Build and distribute custom VM image"

description: |
  Builds a custom VM image with Azure Image Builder and publishes it to a Shared Image
  Gallery. The template expects a Packer‑style JSON under `templates/<folder>/<file>` and
  replaces placeholder tokens before submission.

on:
  workflow_call:
    inputs:
      templateFolder: { required: true, type: string }
      templateName: { required: true, type: string }
      sigResourceGroup: { required: true, type: string }
      imageDefName: { required: true, type: string }
      sigName: { required: true, type: string }
      # callers may omit if they always build in one region
      location: { required: true, type: string, default: "westus2" }
      additionalregion: { required: false, type: string, default: "eastus2" }
      runOutputName: { required: true, type: string, default: "GoldenImage" }
    secrets:
      AZURE_CLIENT_ID: { required: true }
      AZURE_TENANT_ID: { required: true }
      AZURE_SUBSCRIPTION_ID: { required: true }

permissions:
  contents: write
  id-token: write
  actions: read
  security-events: write

jobs:
  build-image:
    name: Build & Distribute Image
    runs-on: ubuntu-latest
    env: # ── DRY: shared across steps ─────────────────────
      SUB_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      SIG_RG: ${{ inputs.sigResourceGroup }}
      IMG_DEF: ${{ inputs.imageDefName }}
      SIG_NAME: ${{ inputs.sigName }}
      LOC: ${{ inputs.location }}
      ADD_LOC: ${{ inputs.additionalregion }}
      RUN_OUT: ${{ inputs.runOutputName }}
      IMG_ID: "/subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/${{ inputs.sigResourceGroup }}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/rai-identity"
      TEMPLATE_PATH: templates/${{ inputs.templateFolder }}/${{ inputs.templateName }}
    outputs:
      release_version: ${{ steps.version.outputs.release_version }}
    steps:
      # ──────────────────────────────────────────────────────────────────────────
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # ──────────────────────────────────────────────────────────────────────────
      - name: Azure OIDC login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Ensure required extension is present (idempotent)
      - name: Ensure Image Builder CLI commands are available
        shell: bash
        run: |
          set -euo pipefail
          # Azure CLI 2.43+ bundles "az image builder" in core. Older runners need the extension.
          if ! az image builder --help >/dev/null 2>&1; then
            echo "Image Builder commands missing — attempting to add extension…"
            az extension add --name imagebuilder --yes || az extension add --name image-builder --yes || echo "Extension not available; continuing with generic az resource commands."
          else
            echo "Image Builder commands already present in CLI."
          fi
