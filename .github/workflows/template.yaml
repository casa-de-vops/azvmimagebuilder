name: "[Template] Build and distribute custom VM image"

description: |
  Builds a custom VM image with Azure Image Builder and publishes it to a Shared Image
  Gallery. The template expects a Packer‑style JSON under `templates/<folder>/<file>` and
  replaces placeholder tokens before submission.

on:
  workflow_call:
    inputs:
      templateFolder: { required: true, type: string }
      templateName: { required: true, type: string }
      sigResourceGroup: { required: true, type: string }
      imageDefName: { required: true, type: string }
      sigName: { required: true, type: string }
      # callers may omit if they always build in one region
      location: { required: true, type: string, default: "westus2" }
      additionalregion: { required: false, type: string, default: "eastus2" }
      runOutputName: { required: true, type: string, default: "GoldenImage" }
    secrets:
      AZURE_CLIENT_ID: { required: true }
      AZURE_TENANT_ID: { required: true }
      AZURE_SUBSCRIPTION_ID: { required: true }

permissions:
  contents: write
  id-token: write
  actions: read
  security-events: write

jobs:
  build-image:
    name: Build & Distribute Image
    runs-on: ubuntu-latest
    env: # ── DRY: shared across steps ─────────────────────
      SUB_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      SIG_RG: ${{ inputs.sigResourceGroup }}
      IMG_DEF: ${{ inputs.imageDefName }}
      SIG_NAME: ${{ inputs.sigName }}
      LOC: ${{ inputs.location }}
      ADD_LOC: ${{ inputs.additionalregion }}
      RUN_OUT: ${{ inputs.runOutputName }}
      IMG_ID: "/subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/${{ inputs.sigResourceGroup }}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/rai-identity"
      TEMPLATE_PATH: templates/${{ inputs.templateFolder }}/${{ inputs.templateName }}
    outputs:
      release_version: ${{ steps.version.outputs.release_version }}
    steps:
      # ──────────────────────────────────────────────────────────────────────────
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # ──────────────────────────────────────────────────────────────────────────
      - name: Azure OIDC login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Ensure required extension is present (idempotent)
      - name: Install Image Builder extension
        run: az extension add --name image-builder --yes

      # ──────────────────────────────────────────────────────────────────────────
      - name: Generate release version (timestamp)
        id: version
        shell: bash
        run: |
          set -euo pipefail
          VERSION=$(date +%Y%m%d%H%M%S)
          echo "release_version=$VERSION" | tee -a "$GITHUB_OUTPUT"

      # ──────────────────────────────────────────────────────────────────────────
      - name: Prepare image template
        shell: bash
        run: |
          set -euo pipefail
          cp "$TEMPLATE_PATH" ./processed-template.json

          declare -a TOKENS=(
            "<subscriptionID>=$SUB_ID"
            "<rgName>=$SIG_RG"
            "<imageDefName>=$IMG_DEF"
            "<sharedImageGalName>=$SIG_NAME"
            "<region1>=$LOC"
            "<region2>=$ADD_LOC"
            "<runOutputName>=$RUN_OUT"
            "<imgBuilderId>=$IMG_ID"
          )

          for pair in "${TOKENS[@]}"; do
            IFS='=' read -r search replace <<< "$pair"
            sed -i -e "s|${search}|${replace}|g" processed-template.json
          done

      # ──────────────────────────────────────────────────────────────────────────
      - name: Build & distribute custom VM image
        shell: bash
        run: |
          set -euo pipefail
          TEMPLATE_NAME="${{ inputs.templateName }}-${{ steps.version.outputs.release_version }}"

          az resource create \
            --resource-group "$SIG_RG" \
            --resource-type Microsoft.VirtualMachineImages/imageTemplates \
            --name "$TEMPLATE_NAME" \
            --is-full-object \
            --properties @processed-template.json

          az resource invoke-action \
            --resource-group "$SIG_RG" \
            --resource-type Microsoft.VirtualMachineImages/imageTemplates \
            --name "$TEMPLATE_NAME" \
            --action Run

      # ──────────────────────────────────────────────────────────────────────────
      - name: Expose resource ID for downstream jobs
        shell: bash
        run: |
          set -euo pipefail
          TEMPLATE_ID="/subscriptions/$SUB_ID/resourceGroups/$SIG_RG/providers/Microsoft.VirtualMachineImages/imageTemplates/${{ inputs.templateName }}-${{ steps.version.outputs.release_version }}"
          echo "template_id=$TEMPLATE_ID" | tee -a "$GITHUB_OUTPUT"
