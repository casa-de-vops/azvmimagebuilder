on:
  workflow_call:
    inputs:
      templateFolder: { required: true, type: string }
      templateName: { required: true, type: string }
      sigResourceGroup: { required: true, type: string }
      imageDefName: { required: true, type: string }
      sigName: { required: true, type: string }
      location: { required: true, type: string }
      additionalregion: { required: true, type: string }
      runOutputName: { required: true, type: string }
      buildOS:
        description: "Target OS for the image (linux | windows)"
        type: string
        default: "linux"
        required: true
    secrets:
      AZURE_CLIENT_ID: { required: true }
      AZURE_TENANT_ID: { required: true }
      AZURE_SUBSCRIPTION_ID: { required: true }

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
  id-token: write
  actions: read
  security-events: write

jobs:
  resolve:
    uses: ./.github/workflows/tasks/resolve.yml
    with:
      templateFolder: ${{ inputs.templateFolder }}
      templateName: ${{ inputs.templateName }}
      sigResourceGroup: ${{ inputs.sigResourceGroup }}
      imageDefName: ${{ inputs.imageDefName }}
      sigName: ${{ inputs.sigName }}
      location: ${{ inputs.location }}
      additionalregion: ${{ inputs.additionalregion }}
      runOutputName: ${{ inputs.runOutputName }}
    secrets: inherit

  validate:
    needs: resolve
    uses: ./.github/workflows/tasks/validate.yml
    with:
      resolved_path: ${{ needs.resolve.outputs.resolved_path }}
      sigResourceGroup: ${{ inputs.sigResourceGroup }}
      imgTemplateName: ${{ needs.resolve.outputs.img_template_name }}
      location: ${{ inputs.location }}
    secrets: inherit

  # build:
  #   needs: validate
  #   runs-on: ${{ inputs.buildOS == 'windows' && 'windows-latest' || 'ubuntu-latest' }}
  #   env: # expose secrets to composite actions
  #     AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  #     AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  #     AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Build on Linux
  #       if: inputs.buildOS != 'windows'
  #       id: build_linux
  #       uses: ./.github/actions/build-linux
  #       with:
  #         resolved_path: ${{ needs.resolve.outputs.resolved_path }}
  #         sigResourceGroup: ${{ inputs.sigResourceGroup }}
  #         imgTemplateName: ${{ needs.resolve.outputs.img_template_name }}
  #         runOutputName: ${{ inputs.runOutputName }}
  #         location: ${{ inputs.location }}
  #         buildTimeoutMins: 45

  #     - name: Build on Windows
  #       if: inputs.buildOS == 'windows'
  #       id: build_windows
  #       uses: ./.github/actions/build-windows
  #       with:
  #         resolved_path: ${{ needs.resolve.outputs.resolved_path }}
  #         sigResourceGroup: ${{ inputs.sigResourceGroup }}
  #         imgTemplateName: ${{ needs.resolve.outputs.img_template_name }}
  #         runOutputName: ${{ inputs.runOutputName }}
  #         location: ${{ inputs.location }}
  #         buildTimeoutMins: 45

  # summary:
  #   needs: [resolve, validate, build]
  #   uses: ./.github/workflows/tasks/summary.yml
  #   with:
  #     imgTemplateName: ${{ needs.resolve.outputs.img_template_name }}
  #     releaseVersion: ${{ needs.resolve.outputs.release_version }}
  #     buildOS: ${{ inputs.buildOS }}
  #     runOutputName: ${{ inputs.runOutputName }}
  #     overallStatus: ${{ needs.build.result }}
