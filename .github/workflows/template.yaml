name: create_custom_vm_image_template

on:
    workflow_call:
        inputs:
            templateFolder:
                required: true
                type: string
                default: "1_Creating_a_Custom_Linux_Shared_Image_Gallery_Image"
            templateName:
                required: true
                type: string
                default: "helloImageTemplateforSIG.json"
            sigResourceGroup:
                required: true
                type: string
            imageDefName:
                required: true
                type: string
            sigName:
                required: true
                type: string
            location:
                required: true
                type: string
            additionalregion:
                required: true
                type: string
            runOutputName:
                required: true
                type: string
        secrets:
            AZURE_CLIENT_ID:
                required: true
            AZURE_TENANT_ID:
                required: true
            AZURE_SUBSCRIPTION_ID:
                required: true

permissions:
    contents: read
    id-token: write
    actions: read
    security-events: write

env:
    SEMVERBOT_VERSION: "1.0.0"

jobs:
    BUILD-CUSTOM-IMAGE:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Login with Azure OIDC
              uses: azure/login@v1
              with:
                client-id: ${{ secrets.AZURE_CLIENT_ID }}
                tenant-id: ${{ secrets.AZURE_TENANT_ID }}
                subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

            - name: Install semverbot
              shell: bash
              run: |
                    mkdir -p "$HOME/bin"
                    echo "$HOME/bin" >> "$GITHUB_PATH"
                    curl -sL \
                        -o "$HOME/bin/sbot" \
                        "https://github.com/restechnica/semverbot/releases/download/v${SEMVERBOT_VERSION}/sbot-linux-amd64"
                    chmod +x "$HOME/bin/sbot"
                    # (optional) verify checksum â€“ insert sha256sum here if you wish
                    # echo "<sha256>  $HOME/bin/sbot" | sha256sum -c -

            - name: Compute version bump
              shell: bash
              run: |
                    sbot update version
                    echo "CURRENT_VERSION=$(sbot get version)"   >> "$GITHUB_ENV"
                    echo "RELEASE_VERSION=$(sbot predict version)" >> "$GITHUB_ENV"
                    echo "Current: $CURRENT_VERSION"
                    echo "Next:    $RELEASE_VERSION"

            - name: Download and configure image template
              shell: bash
              env:
                    subscriptionID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
                    sigResourceGroup: ${{ inputs.sigResourceGroup }}
                    imageDefName: ${{ inputs.imageDefName }}
                    sigName: ${{ inputs.sigName }}
                    location: ${{ inputs.location }}
                    additionalregion: ${{ inputs.additionalregion }}
                    runOutputName: ${{ inputs.runOutputName }}
                    imgBuilderId: "/subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/${{ inputs.sigResourceGroup }}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/rai-identity"

              run: |
                    cp templates/${{ inputs.templateName }} ${{ inputs.templateName }}

                    sed -i -e "s/<subscriptionID>/$subscriptionID/g" ${{ inputs.templateName }}
                    sed -i -e "s/<rgName>/$sigResourceGroup/g" ${{ inputs.templateName }}
                    sed -i -e "s/<imageDefName>/$imageDefName/g" ${{ inputs.templateName }}
                    sed -i -e "s/<sharedImageGalName>/$sigName/g" ${{ inputs.templateName }}

                    sed -i -e "s/<region1>/$location/g" ${{ inputs.templateName }}
                    sed -i -e "s/<region2>/$additionalregion/g" ${{ inputs.templateName }}
                    sed -i -e "s/<runOutputName>/$runOutputName/g" ${{ inputs.templateName }}

                    sed -i -e "s%<imgBuilderId>%$imgBuilderId%g" ${{ inputs.templateName }}

            - name: Build and distribute custom VM image
              shell: bash
              env:
                    subscriptionID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
                    sigResourceGroup: ${{ inputs.sigResourceGroup }}
                    imageDefName: ${{ inputs.imageDefName }}
                    sigName: ${{ inputs.sigName }}
                    location: ${{ inputs.location }}
                    additionalregion: ${{ inputs.additionalregion }}
                    runOutputName: ${{ inputs.runOutputName }}
                    imgBuilderId: "/subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/${{ inputs.sigResourceGroup }}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/rai-identity"
              run: |
                    IMAGE_TEMPLATE_NAME="${{ inputs.templateName }}-${RELEASE_VERSION}"

                    az resource create \
                        --resource-group $sigResourceGroup \
                        --properties @${{ inputs.templateName }} \
                        --is-full-object \
                        --resource-type Microsoft.VirtualMachineImages/imageTemplates \
                        -n "$IMAGE_TEMPLATE_NAME"

                    az resource invoke-action \
                        --resource-group $sigResourceGroup \
                        --resource-type Microsoft.VirtualMachineImages/imageTemplates \
                        -n "$IMAGE_TEMPLATE_NAME" \
                        --action Run

            - name: Release and push version tag
              shell: bash
              run: |
                    sbot release version
                    sbot push version