# .github/workflows/tasks/validate.yml
name: Validate Image Builder Template
on:
  workflow_call:
    inputs:
      # artifact path + metadata produced by resolve
      resolved_path: { required: true, type: string }
      sigResourceGroup: { required: true, type: string }
      imgTemplateName: { required: true, type: string }
      location: { required: true, type: string }
      buildOS: { required: true, type: string } # linux | windows
    secrets:
      AZURE_SUBSCRIPTION_ID: { required: true }
      AZURE_CLIENT_ID: { required: true }
      AZURE_TENANT_ID: { required: true }

    outputs:
      validated:
        description: "always 'true' if this job succeeded"
        value: ${{ jobs.validate.outputs.validated }}

jobs:
  validate:
    # pick the runner that matches buildOS
    runs-on: ${{ inputs.buildOS == 'windows' && 'windows-latest' || 'ubuntu-latest' }}

    outputs:
      validated: ${{ steps.pass.outputs.ok }}

    steps:
      #######################################################################
      # 1.  Get the template file that resolve.yml uploaded
      #######################################################################
      - name: Download resolved template
        uses: actions/download-artifact@v4
        with:
          name: resolved-image-template
          path: .

      #######################################################################
      # 2.  Azure login (OIDC)
      #######################################################################
      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: ${{ inputs.buildOS == 'windows' }} # only needed on Win

      #######################################################################
      # 3.  OS‑specific validation paths
      #######################################################################
      # ── Linux runner ─────────────────────────────────────────────────────
      - name: Validate template (az CLI)
        if: runner.os != 'Windows'
        shell: bash
        run: |
          set -euo pipefail
          az deployment group validate \
            --resource-group "${{ inputs.sigResourceGroup }}" \
            --template-file  "${{ inputs.resolved_path }}" \
            --parameters     imageTemplateName="${{ inputs.imgTemplateName }}" \
                             svclocation="${{ inputs.location }}" \
                             api-version='2022-07-01' \
            --only-show-errors
          echo "Template validation ✅ (Linux)"

      # ── Windows runner ───────────────────────────────────────────────────
      - name: Validate template (PowerShell)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          $params = @{
            imageTemplateName = '${{ inputs.imgTemplateName }}'
            svclocation       = '${{ inputs.location }}'
            'api-version'     = '2022-07-01'
          }
          Test-AzResourceGroupDeployment `
            -ResourceGroupName  '${{ inputs.sigResourceGroup }}' `
            -TemplateFile       '${{ inputs.resolved_path }}' `
            -TemplateParameterObject $params `
            -Verbose
          Write-Host "Template validation ✅ (Windows)"

      #######################################################################
      # 4.  Mark success for downstream jobs
      #######################################################################
      - name: Set success output
        id: pass
        if: success() # only runs when previous step succeeded
        shell: bash
        run: echo "ok=true" >> "$GITHUB_OUTPUT"
