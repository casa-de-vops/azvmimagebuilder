{
    "type": "Microsoft.VirtualMachineImages",
    "apiVersion": "2019-05-01-preview",
    "location": "<region1>",
    "dependsOn": [],
    "tags": {
      "imagebuilderTemplate": "AzureImageBuilderSIG",
      "userIdentity": "enabled"
    },
    "identity": {
      "type": "UserAssigned",
      "userAssignedIdentities": {
        "<imgBuilderId>": {}
      }
    },
  
    "properties": {
      "buildTimeoutInMinutes": 80,
      "stagingResourceGroup": "<buildRGName>",
      "vmProfile": {
        "vmSize": "Standard_D1_v2",
        "osDiskSizeGB": 64
      },
  
      "source": {
        "type": "PlatformImage",
        "publisher": "RedHat",
        "offer": "RHEL",
        "sku": "8-lvm",
        "version": "latest"
      },
      "customize": [
        {
          "type": "Shell",
          "name": "Prepare-and-enable-dnf-automatic",
          "inline": [
            "sudo bash -c 'set -euo pipefail && dnf -y update'",
            "sudo dnf -y install dnf-automatic",
            "sudo systemctl enable --now dnf-automatic.timer"
          ]
        },
        {
          "type": "Shell",
          "name": "Install-EPEL",
          "inline": [
            "sudo dnf -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm",
            "sudo dnf -y update"
          ]
        },
        {
          "type": "Shell",
          "name": "Install-Wine-and-NotepadPP-via-EPEL",
          "inline": [
            "sudo dnf -y install wine wget unzip",
            "wget -O /tmp/npp.zip https://github.com/notepad-plus-plus/notepad-plus-plus/releases/download/v8.8.1/npp.8.8.1.portable.x64.zip",
            "mkdir -p ~/.wine/drive_c/npp",
            "unzip /tmp/npp.zip -d ~/.wine/drive_c/npp",
            "rm -f /tmp/npp.zip"
          ]
        },
        {
          "type": "Shell",
          "name": "Install-Text-Editors",
          "inline": [
            "sudo dnf -y install vim nano gedit",
            "echo 'Text editors installed: vim, nano, gedit'"
          ]
        },
        {
          "type": "Shell",
          "name": "Pre-stage-Azure-Arc-Agent",
          "inline": [
            "sudo mkdir -p /opt/arc",
            "sudo wget https://aka.ms/azcmagent -O /opt/arc/install_linux_azcmagent.sh",
            "sudo chmod +x /opt/arc/install_linux_azcmagent.sh",
            "sudo /opt/arc/install_linux_azcmagent.sh",
            "echo 'Azure Arc agent installed to /opt/arc.'"
          ]
        },
        {
          "type": "Shell",
          "name": "Add-Onboarding-Script-Inline",
          "inline": [
            "cat << 'EOF' | sudo tee /opt/arc/onboarding.sh > /dev/null",
            "#!/bin/bash",
            "export subscriptionId=\"b2c5ab64-1473-483f-a839-ef88914ac0b8\"",
            "export resourceGroup=\"rg\"",
            "export tenantId=\"16b3c013-d300-468d-ac64-7eda0820b6d3\"",
            "export location=\"westus2\"",
            "export authType=\"token\"",
            "export correlationId=\"8ce0bcb1-7273-47d7-b879-4be01ede134f\"",
            "export cloud=\"AzureCloud\"",
            "LINUX_INSTALL_SCRIPT=\"/tmp/install_linux_azcmagent.sh\"",
            "if [ -f \"$LINUX_INSTALL_SCRIPT\" ]; then rm -f \"$LINUX_INSTALL_SCRIPT\"; fi;",
            "output=$(wget https://gbl.his.arc.azure.com/azcmagent-linux -O \"$LINUX_INSTALL_SCRIPT\" 2>&1);",
            "echo \"$output\";",
            "bash \"$LINUX_INSTALL_SCRIPT\";",
            "sleep 5;",
            "sudo azcmagent connect --resource-group \"$resourceGroup\" --tenant-id \"$tenantId\" --location \"$location\" --subscription-id \"$subscriptionId\" --cloud \"$cloud\" --correlation-id \"$correlationId\"",
            "EOF",
            "sudo chmod +x /opt/arc/onboarding.sh"
          ]
        },
        {
          "type": "File",
          "name": "downloadBuildArtifacts",
          "sourceUri": "https://raw.githubusercontent.com/danielsollondon/azvmimagebuilder/master/quickquickstarts/exampleArtifacts/buildArtifacts/index.html",
          "destination": "/tmp/index.html"
        },
        {
          "type": "Shell",
          "name": "setupBuildPath",
          "inline": [
            "sudo mkdir -p /buildArtifacts",
            "sudo mv /tmp/index.html /buildArtifacts/index.html"
          ]
        }
      ],
      "distribute": [
        {
          "type": "SharedImage",
          "galleryImageId": "/subscriptions/<subscriptionID>/resourceGroups/<rgName>/providers/Microsoft.Compute/galleries/<sharedImageGalName>/images/<imageDefName>",
          "runOutputName": "<runOutputName>",
          "artifactTags": {
            "source": "azureVmImageBuilder",
            "baseosimg": "rhel8"
          },
          "replicationRegions": ["<region1>", "<region2>"]
        }
      ]
    }
  }